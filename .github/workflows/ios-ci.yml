name: iOS CI

on:
  push:
    branches: [ main, development ]
    paths:
      - 'App/**'
      - 'Firebase/**'
      - '.github/workflows/ios-ci.yml'
  pull_request:
    branches: [ main, development ]
    paths:
      - 'App/**'
      - 'Firebase/**'
      - '.github/workflows/ios-ci.yml'

# Prevent multiple deployments running at once
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ios-build:
    name: iOS Build and Test
    runs-on: macos-15
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_16.2.app
    
    - name: Cache SwiftLint
      id: cache-swiftlint
      uses: actions/cache@v3
      with:
        path: /usr/local/bin/swiftlint
        key: ${{ runner.os }}-swiftlint
        
    - name: Install SwiftLint
      if: steps.cache-swiftlint.outputs.cache-hit != 'true'
      run: brew install swiftlint

    - name: Cache xcbeautify
      id: cache-xcbeautify
      uses: actions/cache@v3
      with:
        path: /usr/local/bin/xcbeautify
        key: ${{ runner.os }}-xcbeautify
        
    - name: Install xcbeautify
      if: steps.cache-xcbeautify.outputs.cache-hit != 'true'
      run: brew install xcbeautify
      
    - name: Run SwiftLint
      run: |
        if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
          swiftlint lint --strict App/aiaio
        else
          swiftlint lint App/aiaio || true # Allow warnings in development
        fi

    - name: Cache SPM dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/Library/Caches/org.swift.swiftpm
          ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-spm-${{ hashFiles('App/aiaio/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
        
    - name: Build iOS App
      run: |
        cd App/aiaio
        xcodebuild build-for-testing \
          -scheme aiaio \
          -destination "platform=iOS Simulator,name=iPhone 16 Pro,OS=18.2" \
          -configuration Debug \
          -allowProvisioningUpdates \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          ONLY_ACTIVE_ARCH=YES \
          | xcbeautify
          
    - name: Run Tests
      run: |
        cd App/aiaio
        xcodebuild test-without-building \
          -scheme aiaio \
          -destination "platform=iOS Simulator,name=iPhone 16 Pro,OS=18.2" \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          | xcbeautify

    - name: Verify Strict Concurrency
      run: |
        cd App/aiaio
        if ! grep -q "SWIFT_STRICT_CONCURRENCY = complete" aiaio.xcodeproj/project.pbxproj; then
          echo "Error: Strict concurrency is not enabled"
          exit 1
        fi

  firebase-build:
    name: Firebase Build and Test
    runs-on: ubuntu-latest
    env:
      STORAGE_BUCKET: ${{ secrets.CI_STORAGE_BUCKET }}
      FIREBASE_CONFIG: '{"storageBucket": "${{ secrets.CI_STORAGE_BUCKET }}"}'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache Python Binary
      id: cache-python
      uses: actions/cache@v3
      with:
        path: /opt/hostedtoolcache/Python
        key: ${{ runner.os }}-python-3.12-${{ hashFiles('Firebase/functions/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-3.12-
          ${{ runner.os }}-python-
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: 'Firebase/functions/requirements.txt'
        update-environment: false

    - name: Cache Firebase CLI
      id: cache-firebase-cli
      uses: actions/cache@v3
      with:
        path: ~/.cache/firebase/tools
        key: ${{ runner.os }}-firebase-cli-${{ hashFiles('Firebase/functions/**') }}
        
    - name: Install Firebase CLI
      if: steps.cache-firebase-cli.outputs.cache-hit != 'true'
      run: |
        curl -sL https://firebase.tools | bash
        firebase --version
      
    - name: Install Python Dependencies
      run: |
        cd Firebase/functions
        python -m pip install -r requirements.txt

    - name: Test Firebase Functions
      run: |
        cd Firebase/functions
        python -m pytest
